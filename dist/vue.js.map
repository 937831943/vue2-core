{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCature = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCature}`);\r\nconst endTag = new RegExp(`^<\\\\/${qnameCature}[^>]*>`);\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个元素 \r\n    let root;\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return { tag, type: ELEMENT_TYPE, children: [], attrs, parent: null }\r\n    }\r\n\r\n\r\n    function start(tag, attrs) {\r\n        const node = createASTElement(tag, attrs);\r\n        if (!root) {\r\n            root = node;\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        text && currentParent.children.push({ type: TEXT_TYPE, text, parent: currentParent })\r\n\r\n    }\r\n\r\n    function end(tag) {\r\n        stack.pop();\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签 就一直匹配下去\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5] || true\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // HTML 最开始是个<div></div>\r\n    while (html) {\r\n        const textEnd = html.indexOf('<');\r\n\r\n        // 如果textEnd为0说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) { // 解析到开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd);\r\n            if (text) {\r\n                chars(text);\r\n                advance(text.length); // 解析到的文本\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        const attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text;\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index;\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',');\r\n}\r\n\r\nfunction codegen(ast) {\r\n\r\n    let children = genChildren(ast.children);\r\n    const code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''})`;\r\n    return code;\r\n}\r\n\r\nexport function compileToFunciton(template) {\r\n    // 将template转换成AST语法树\r\n    const ast = parseHTML(template);\r\n    // 生成render方法 （render方法执行后的返回结果就是虚拟DOM）\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`;\r\n    return new Function(code);\r\n}","export function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return { vm, tag, key, data, children, text };\r\n}","import { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') {\r\n        // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n        vnode.el = document.createElement(tag);\r\n        patchProps(vnode.el, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (const key in props) {\r\n        if (key === 'style') {\r\n            for (const styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    const isRealElement = oldVNode.nodeType;\r\n    if (isRealElement) {\r\n        // 初渲染流程\r\n        const elm = oldVNode; // 获取真实元素\r\n        const parentElm = elm.parentNode; // 拿到父元素\r\n        const newElm = createElm(vnode);\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        parentElm.removeChild(elm);\r\n        return newElm;\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        vm.$el = patch(el, vnode);\r\n    }\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments);\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments);\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== 'object') return value;\r\n        return JSON.stringify(value);\r\n    }\r\n    Vue.prototype._render = function () {\r\n        return this.$options.render.call(this);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el;\r\n    vm._update(vm._render())\r\n}\r\n\r\n// vue核心流程\r\n// 1. 创造响应式数据\r\n// 2. 将模板转换成AST语法树\r\n// 3. 将AST语法树转换成render函数\r\n// 4. 后续每次数据更新可以只执行render函数（无需再次执行AST转化过程）\r\n// render函数会产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM","// 对数组中的部分方法进行重写\r\n\r\nconst oldArrayPrototype = Array.prototype; // 获取数组的原型\r\n\r\nexport const newArrayPrototype = Object.create(oldArrayPrototype);\r\n\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']; // 找到所有的变异方法\r\n\r\nmethods.forEach(method => {\r\n    newArrayPrototype[method] = function (...args) {\r\n        // 内部调用原来的方法\r\n        // 函数的劫持 切片编程\r\n        // 增加自己的功能 ...\r\n        let inserted\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n        return oldArrayPrototype[method].call(this, ...args)\r\n    }\r\n})","import { newArrayPrototype } from \"./array\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些API $set $delete等）\r\n\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n\r\n        if (Array.isArray(data)) {\r\n            // 重写数组的七个变异方法\r\n\r\n            data.__proto__ = newArrayPrototype;\r\n\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n\r\n    }\r\n\r\n    walk(data) { // 循环对象 对属性依次劫持\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包\r\n    observe(value)\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) return;\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data === null) {\r\n        return; // 只对对象进行劫持\r\n    }\r\n\r\n    if (data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了\r\n    // 要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过\r\n    return new Observer(data);\r\n}","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data 可能是函数或对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    vm._data = data;\r\n    observe(data);\r\n\r\n    // 将vm._data 用vm来代理就可以了\r\n    for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n            proxy(vm, '_data', key);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { compileToFunciton } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // vue vm.$options 就是获取用户的配置\r\n        const vm = this;\r\n        vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n\r\n        const ops = vm.$options;\r\n\r\n        if (!ops.render) {\r\n            let template\r\n            if (!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n\r\n            if (template) {\r\n                const render = compileToFunciton(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n\r\n        mountComponent(vm, el); // 组件的挂载\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 拓展了init方法\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;"],"names":["ncname","qnameCature","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunciton","template","Function","createElementVNode","vm","data","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","render","call","mountComponent","oldArrayPrototype","Array","newArrayPrototype","Object","create","methods","method","inserted","ob","__ob__","args","splice","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","proxy","_data","hasOwnProperty","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}