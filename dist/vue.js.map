{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCature = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCature}`);\nconst endTag = new RegExp(`^<\\\\/${qnameCature}[^>]*>`);\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst startTagClose = /^\\s*(\\/?)>/;\n\nexport function parseHTML(html) {\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = []; // 用于存放元素的\n    let currentParent; // 指向的是栈中的最后一个元素 \n    let root;\n    // 最终需要转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return { tag, type: ELEMENT_TYPE, children: [], attrs, parent: null }\n    }\n\n\n    function start(tag, attrs) {\n        const node = createASTElement(tag, attrs);\n        if (!root) {\n            root = node;\n        }\n        if (currentParent) {\n            node.parent = currentParent;\n            currentParent.children.push(node);\n        }\n        stack.push(node);\n        currentParent = node;\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        text && currentParent.children.push({ type: TEXT_TYPE, text, parent: currentParent })\n\n    }\n\n    function end(tag) {\n        stack.pop();\n        currentParent = stack[stack.length - 1];\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: []\n            }\n            advance(start[0].length);\n\n            // 如果不是开始标签 就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5] || true\n                })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match;\n        }\n        return false;\n    }\n\n    // HTML 最开始是个<div></div>\n    while (html) {\n        const textEnd = html.indexOf('<');\n\n        // 如果textEnd为0说明是一个开始标签或者结束标签\n        // 如果textEnd > 0 说明就是文本的结束位置\n        if (textEnd === 0) {\n            const startTagMatch = parseStartTag();\n            if (startTagMatch) { // 解析到开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]);\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd);\n            if (text) {\n                chars(text);\n                advance(text.length); // 解析到的文本\n            }\n        }\n    }\n\n    return root;\n}\n","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if (attr.name === 'style') {\n            let obj = {};\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index;\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`;\n        }\n    }\n}\n\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',');\n}\n\nfunction codegen(ast) {\n\n    let children = genChildren(ast.children);\n    const code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''})`;\n    return code;\n}\n\nexport function compileToFunciton(template) {\n    // 将template转换成AST语法树\n    const ast = parseHTML(template);\n    // 生成render方法 （render方法执行后的返回结果就是虚拟DOM）\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    return new Function(code);\n}","let id = 0;\nexport default class Dep {\n    constructor() {\n        this.id = id++;\n        // 这里存放着当前属性对应的watcher有哪些\n        this.subs = [];\n\n    }\n    depend() {\n        // this.subs.push(Dep.target);\n        Dep.target.addDep(this)\n    }\n    addSub(watcher) {\n        this.subs.push(watcher);\n    }\n    notify() {\n        this.subs.forEach(watcher => watcher.update())\n    }\n}\nDep.target = null;","import Dep from \"./dep\";\n\nlet id = 0;\n// 不同的组件有不同的watcher\nexport default class Watcher {\n    constructor(vm, fn, options) {\n        this.id = id++;\n        this.renderWatcher = options;\n\n        // getter意味着调用这个函数可以发生取值操作\n        this.getter = fn;\n        this.deps = [];\n        this.depsId = new Set();\n        this.get();\n    }\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep);\n            this.depsId.add(id);\n            dep.addSub(this);\n        }\n    }\n    get() {\n        Dep.target = this;\n        this.getter();\n        Dep.target = null;\n    }\n    update() {\n        queueWatcher(this);\n    }\n    run() {\n        this.get();\n    }\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false;\n\nfunction flushSchedulerQueue() {\n    const flushQueue = queue.slice(0);\n    queue = [];\n    has = {};\n    pending = false;\n    flushQueue.forEach(q => q.run());\n}\n\nfunction queueWatcher(watcher) {\n    const id = watcher.id;\n    if (!has[id]) {\n        queue.push(watcher);\n        has[id] = true;\n        if (!pending) {\n            nextTick(flushSchedulerQueue);\n            pending = true;\n        }\n    }\n}\n\nlet callbacks = [];\nlet waiting = false;\n\nfunction flushCallBacks() {\n    waiting = false;\n    let cbs = callbacks.slice(0);\n    callbacks = [];\n    cbs.forEach(cb => cb());\n}\n\nlet timerFun;\nif (Promise) {\n    timerFun = () => {\n        Promise.resolve().then(flushCallBacks);\n    }\n} else if (MutationObserver) {\n    const observer = new MutationObserver(flushCallBacks);\n    const textNode = document.createTextNode(1);\n    observer.observe(textNode, {\n        characterData: true\n    });\n    timerFun = () => {\n        textNode.textContent = 2;\n    }\n} else if (setImmediate) {\n    timerFun = () => {\n        setImmediate(flushCallBacks);\n    }\n} else {\n    timerFun = () => {\n        setTimeout(flushCallBacks);\n    }\n}\n\nexport function nextTick(cb) {\n    callbacks.push(cb);\n    if (!waiting) {\n        timerFun();\n        waiting = true;\n    }\n}","export function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key;\n    if (key) {\n        delete data.key;\n    }\n    return vnode(vm, tag, key, data, children);\n}\n\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, key, data, children, text) {\n    return { vm, tag, key, data, children, text };\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\"\n\nfunction createElm(vnode) {\n    let { tag, data, children, text } = vnode;\n    if (typeof tag === 'string') {\n        // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n        vnode.el = document.createElement(tag);\n        patchProps(vnode.el, data);\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\nfunction patchProps(el, props) {\n    for (const key in props) {\n        if (key === 'style') {\n            for (const styleName in props.style) {\n                el.style[styleName] = props.style[styleName];\n            }\n        } else {\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n\nfunction patch(oldVNode, vnode) {\n    const isRealElement = oldVNode.nodeType;\n    if (isRealElement) {\n        // 初渲染流程\n        const elm = oldVNode; // 获取真实元素\n        const parentElm = elm.parentNode; // 拿到父元素\n        const newElm = createElm(vnode);\n        parentElm.insertBefore(newElm, elm.nextSibling);\n        parentElm.removeChild(elm);\n        return newElm;\n    } else {\n        // diff算法\n    }\n}\n\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        const el = vm.$el;\n        vm.$el = patch(el, vnode);\n    }\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments);\n    }\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments);\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value;\n        return JSON.stringify(value);\n    }\n    Vue.prototype._render = function () {\n        return this.$options.render.call(this);\n    }\n}\n\nexport function mountComponent(vm, el) {\n    vm.$el = el;\n    const updateComponent = () => {\n        vm._update(vm._render())\n    }\n\n    new Watcher(vm, updateComponent, true);\n}\n\n// vue核心流程\n// 1. 创造响应式数据\n// 2. 将模板转换成AST语法树\n// 3. 将AST语法树转换成render函数\n// 4. 后续每次数据更新可以只执行render函数（无需再次执行AST转化过程）\n// render函数会产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM","// 对数组中的部分方法进行重写\n\nconst oldArrayPrototype = Array.prototype; // 获取数组的原型\n\nexport const newArrayPrototype = Object.create(oldArrayPrototype);\n\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']; // 找到所有的变异方法\n\nmethods.forEach(method => {\n    newArrayPrototype[method] = function (...args) {\n        // 内部调用原来的方法\n        // 函数的劫持 切片编程\n        // 增加自己的功能 ...\n        let inserted\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.splice(2);\n            default:\n                break;\n        }\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n        ob.dep.notify();\n        return oldArrayPrototype[method].call(this, ...args)\n    }\n})","import { newArrayPrototype } from \"./array\";\nimport Dep from \"./dep\";\n\nclass Observer {\n    constructor(data) {\n\n        this.dep = new Dep();\n        // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些API $set $delete等）\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false\n        })\n        if (Array.isArray(data)) {\n            // 重写数组的七个变异方法\n            data.__proto__ = newArrayPrototype;\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n\n    walk(data) { // 循环对象 对属性依次劫持\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\n    }\n\n    observeArray(data) {\n        data.forEach(item => observe(item))\n    }\n}\n\nfunction dependArray(value) {\n    value.forEach(i => {\n        i.__ob__?.dep.depend();\n        if (Array.isArray(i)) {\n            dependArray(i);\n        }\n    })\n}\n\nexport function defineReactive(target, key, value) { // 闭包\n    const childOb = observe(value);\n    const dep = new Dep();\n    Object.defineProperty(target, key, {\n        get() {\n            if (Dep.target) {\n                dep.depend();\n                if (childOb) {\n                    childOb.dep.depend();\n                    if (Array.isArray(value)) {\n                        dependArray(value);\n                    }\n                }\n            }\n            return value;\n        },\n        set(newValue) {\n            if (newValue === value) return;\n            observe(newValue);\n            value = newValue;\n            dep.notify();\n        }\n    })\n}\n\nexport function observe(data) {\n    if (typeof data !== 'object' || data === null) {\n        return; // 只对对象进行劫持\n    }\n\n    if (data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\n        return data.__ob__;\n    }\n\n    // 如果一个对象被劫持过了，那就不需要再被劫持了\n    // 要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过\n    return new Observer(data);\n}","import { observe } from \"./observe\";\n\nexport function initState(vm) {\n    const opts = vm.$options; // 获取所有的选项\n    if (opts.data) {\n        initData(vm);\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key];\n        },\n        set(newValue) {\n            vm[target][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data; // data 可能是函数或对象\n    data = typeof data === 'function' ? data.call(vm) : data\n    vm._data = data;\n    observe(data);\n\n    // 将vm._data 用vm来代理就可以了\n    for (const key in data) {\n        if (Object.hasOwnProperty.call(data, key)) {\n            proxy(vm, '_data', key);\n        }\n    }\n\n}\n\n","import { compileToFunciton } from \"./compiler\";\nimport { mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) { // 给Vue增加init方法\n    Vue.prototype._init = function (options) { // 用于初始化操作\n        // vue vm.$options 就是获取用户的配置\n        const vm = this;\n        vm.$options = options; // 将用户的选项挂载到实例上\n\n        // 初始化状态\n        initState(vm);\n\n        if (options.el) {\n            vm.$mount(options.el);\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el);\n\n        const ops = vm.$options;\n\n        if (!ops.render) {\n            let template\n            if (!ops.template && el) {\n                template = el.outerHTML;\n            } else {\n                if (el) {\n                    template = ops.template;\n                }\n            }\n\n            if (template) {\n                const render = compileToFunciton(template);\n                ops.render = render;\n            }\n        }\n\n        mountComponent(vm, el); // 组件的挂载\n\n    }\n}\n\n\n","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { nextTick } from \"./observe/watcher\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) { // options就是用户的选项\n    this._init(options);\n}\n\nVue.prototype.$nextTick = nextTick;\n\ninitMixin(Vue); // 拓展了init方法\ninitLifeCycle(Vue);\n\nexport default Vue;"],"names":["ncname","qnameCature","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunciton","template","Function","id","Dep","subs","target","addDep","watcher","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","addSub","queueWatcher","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallBacks","cbs","cb","timerFun","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","undefined","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","render","call","mountComponent","updateComponent","oldArrayPrototype","Array","newArrayPrototype","Object","create","methods","method","inserted","ob","__ob__","args","splice","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","depend","childOb","set","newValue","initState","opts","initData","proxy","_data","hasOwnProperty","initMixin","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}