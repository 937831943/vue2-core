{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCature = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCature}`);\r\nconst endTag = new RegExp(`^<\\\\/${qnameCature}[^>]*>`);\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个元素 \r\n    let root;\r\n    // 最终需要转化成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return { tag, type: ELEMENT_TYPE, children: [], attrs, parent: null }\r\n    }\r\n\r\n\r\n    function start(tag, attrs) {\r\n        const node = createASTElement(tag, attrs);\r\n        if (!root) {\r\n            root = node;\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        currentParent = node;\r\n    }\r\n\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '');\r\n        text && currentParent.children.push({ type: TEXT_TYPE, text, parent: currentParent })\r\n\r\n    }\r\n\r\n    function end(tag) {\r\n        stack.pop();\r\n        currentParent = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n\r\n            // 如果不是开始标签 就一直匹配下去\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5] || true\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // HTML 最开始是个<div></div>\r\n    while (html) {\r\n        const textEnd = html.indexOf('<');\r\n\r\n        // 如果textEnd为0说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0 说明就是文本的结束位置\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) { // 解析到开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd);\r\n            if (text) {\r\n                chars(text);\r\n                advance(text.length); // 解析到的文本\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        const attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text;\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index;\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',');\r\n}\r\n\r\nfunction codegen(ast) {\r\n\r\n    let children = genChildren(ast.children);\r\n    const code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''})`;\r\n    return code;\r\n}\r\n\r\nexport function compileToFunciton(template) {\r\n    // 将template转换成AST语法树\r\n    let ast = parseHTML(template);\r\n\r\n    // 生成render方法 （render方法执行后的返回结果就是虚拟DOM）\r\n\r\n    let r = codegen(ast);\r\n    console.log(r);\r\n}","// 对数组中的部分方法进行重写\r\n\r\nconst oldArrayPrototype = Array.prototype; // 获取数组的原型\r\n\r\nexport const newArrayPrototype = Object.create(oldArrayPrototype);\r\n\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']; // 找到所有的变异方法\r\n\r\nmethods.forEach(method => {\r\n    newArrayPrototype[method] = function (...args) {\r\n        // 内部调用原来的方法\r\n        // 函数的劫持 切片编程\r\n        // 增加自己的功能 ...\r\n        let inserted\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) {\r\n            ob.observeArray(inserted);\r\n        }\r\n        return oldArrayPrototype[method].call(this, ...args)\r\n    }\r\n})","import { newArrayPrototype } from \"./array\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些API $set $delete等）\r\n\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n\r\n        if (Array.isArray(data)) {\r\n            // 重写数组的七个变异方法\r\n\r\n            data.__proto__ = newArrayPrototype;\r\n\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n\r\n    }\r\n\r\n    walk(data) { // 循环对象 对属性依次劫持\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包\r\n    observe(value)\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) return;\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data === null) {\r\n        return; // 只对对象进行劫持\r\n    }\r\n\r\n    if (data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了\r\n    // 要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过\r\n    return new Observer(data);\r\n}","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data 可能是函数或对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    vm._data = data;\r\n    observe(data);\r\n\r\n    // 将vm._data 用vm来代理就可以了\r\n    for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n            proxy(vm, '_data', key);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { compileToFunciton } from \"./compiler\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // vue vm.$options 就是获取用户的配置\r\n        const vm = this;\r\n        vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n\r\n        const ops = vm.$options;\r\n\r\n        if (!ops.render) {\r\n            let template\r\n            if (!ops.template && el) {\r\n                template = el.outerHTML;\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n\r\n            if (template) {\r\n                const render = compileToFunciton(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n        ops.render;\r\n    }\r\n}\r\n\r\n\r\n","import { initMixin } from \"./init\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 拓展了init方法\r\n\r\nexport default Vue;"],"names":["ncname","qnameCature","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunciton","template","r","console","log","oldArrayPrototype","Array","prototype","newArrayPrototype","Object","create","methods","method","inserted","ob","__ob__","args","splice","observeArray","call","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","hasOwnProperty","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}