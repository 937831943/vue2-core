{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCature = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCature}`);\nconst endTag = new RegExp(`^<\\\\/${qnameCature}[^>]*>`);\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst startTagClose = /^\\s*(\\/?)>/;\n\nexport function parseHTML(html) {\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = []; // 用于存放元素的\n    let currentParent; // 指向的是栈中的最后一个元素 \n    let root;\n    // 最终需要转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return { tag, type: ELEMENT_TYPE, children: [], attrs, parent: null }\n    }\n\n\n    function start(tag, attrs) {\n        const node = createASTElement(tag, attrs);\n        if (!root) {\n            root = node;\n        }\n        if (currentParent) {\n            node.parent = currentParent;\n            currentParent.children.push(node);\n        }\n        stack.push(node);\n        currentParent = node;\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        text && currentParent.children.push({ type: TEXT_TYPE, text, parent: currentParent })\n\n    }\n\n    function end(tag) {\n        stack.pop();\n        currentParent = stack[stack.length - 1];\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: []\n            }\n            advance(start[0].length);\n\n            // 如果不是开始标签 就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5] || true\n                })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match;\n        }\n        return false;\n    }\n\n    // HTML 最开始是个<div></div>\n    while (html) {\n        const textEnd = html.indexOf('<');\n\n        // 如果textEnd为0说明是一个开始标签或者结束标签\n        // 如果textEnd > 0 说明就是文本的结束位置\n        if (textEnd === 0) {\n            const startTagMatch = parseStartTag();\n            if (startTagMatch) { // 解析到开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]);\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd);\n            if (text) {\n                chars(text);\n                advance(text.length); // 解析到的文本\n            }\n        }\n    }\n\n    return root;\n}\n","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if (attr.name === 'style') {\n            let obj = {};\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index;\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`;\n        }\n    }\n}\n\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',');\n}\n\nfunction codegen(ast) {\n\n    let children = genChildren(ast.children);\n    const code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''})`;\n    return code;\n}\n\nexport function compileToFunciton(template) {\n    // 将template转换成AST语法树\n    const ast = parseHTML(template);\n    // 生成render方法 （render方法执行后的返回结果就是虚拟DOM）\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    return new Function(code);\n}","const strats = {};\nconst LIFECYCLE = ['beforeCreate', 'created'];\nLIFECYCLE.forEach(hook => {\n    strats[hook] = function (p, c) {\n        if (c) {\n            if (p) {\n                return p.concat(c);\n            }\n            return [c];\n        }\n        return p;\n    }\n});\nexport function mergeOptinons(parent, child) {\n    const options = {};\n    function mergeField(key) {\n        // 策略模式 减少if/else \n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key]);\n        } else {\n            options[key] = child[key] || parent[key];\n        }\n    }\n    for (const key in parent) {\n        mergeField(key);\n    }\n    for (const key in child) {\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n    return options;\n}","import { mergeOptinons } from \"./utils\";\n\nexport function initGlobalAPI(Vue) {\n    // 静态方法\n    Vue.options = {};\n    Vue.mixin = function (mixin) {\n        // 我们希望将用户的选项和全局的Options进行合并\n        this.options = mergeOptinons(this.options, mixin)\n        return this;\n    }\n}\n\n","let id = 0;\nexport class Dep {\n    constructor() {\n        this.id = id++;\n        // 这里存放着当前属性对应的watcher有哪些\n        this.subs = [];\n\n    }\n    depend() {\n        // this.subs.push(Dep.target);\n        Dep.target.addDep(this)\n    }\n    addSub(watcher) {\n        this.subs.push(watcher);\n    }\n    notify() {\n        this.subs.forEach(watcher => watcher.update())\n    }\n}\nDep.target = null;\n\nlet stack = [];\n\nexport function pushTarget(watcher) {\n    stack.push(watcher);\n    Dep.target = watcher;\n}\n\nexport function popTarget() {\n    stack.pop();\n    Dep.target = stack[stack.length - 1];\n}","import { Dep, popTarget, pushTarget } from \"./dep\";\n\nlet id = 0;\n// 不同的组件有不同的watcher\nexport default class Watcher {\n    constructor(vm, exprOrFn, options, cb) {\n        this.id = id++;\n        this.renderWatcher = options;\n        if (typeof exprOrFn === 'string') {\n            this.getter = function () {\n                return vm[exprOrFn];\n            }\n        } else {\n            // getter意味着调用这个函数可以发生取值操作\n            this.getter = exprOrFn;\n        }\n        this.deps = [];\n        this.depsId = new Set();\n        this.lazy = options.lazy;\n        this.cb = cb;\n        this.dirty = this.lazy;\n        this.vm = vm;\n        this.user = options.user;\n        this.value = this.lazy ? undefined : this.get();\n    }\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep);\n            this.depsId.add(id);\n            dep.addSub(this);\n        }\n    }\n    evaluate() {\n        this.value = this.get();\n        this.dirty = false;\n    }\n    get() {\n        pushTarget(this);\n        const value = this.getter.call(this.vm);\n        popTarget();\n        return value;\n    }\n    depend() {\n        this.deps.forEach(dep => dep.depend());\n    }\n    update() {\n        if (this.lazy) {\n            this.dirty = true;\n        } else {\n            queueWatcher(this);\n        }\n    }\n    run() {\n        const oldValue = this.value;\n        const newValue = this.get();\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldValue);\n        }\n    }\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false;\n\nfunction flushSchedulerQueue() {\n    const flushQueue = queue.slice(0);\n    queue = [];\n    has = {};\n    pending = false;\n    flushQueue.forEach(q => q.run());\n}\n\nfunction queueWatcher(watcher) {\n    const id = watcher.id;\n    if (!has[id]) {\n        queue.push(watcher);\n        has[id] = true;\n        if (!pending) {\n            nextTick(flushSchedulerQueue);\n            pending = true;\n        }\n    }\n}\n\nlet callbacks = [];\nlet waiting = false;\n\nfunction flushCallBacks() {\n    waiting = false;\n    let cbs = callbacks.slice(0);\n    callbacks = [];\n    cbs.forEach(cb => cb());\n}\n\nlet timerFun;\nif (Promise) {\n    timerFun = () => {\n        Promise.resolve().then(flushCallBacks);\n    }\n} else if (MutationObserver) {\n    const observer = new MutationObserver(flushCallBacks);\n    const textNode = document.createTextNode(1);\n    observer.observe(textNode, {\n        characterData: true\n    });\n    timerFun = () => {\n        textNode.textContent = 2;\n    }\n} else if (setImmediate) {\n    timerFun = () => {\n        setImmediate(flushCallBacks);\n    }\n} else {\n    timerFun = () => {\n        setTimeout(flushCallBacks);\n    }\n}\n\nexport function nextTick(cb) {\n    callbacks.push(cb);\n    if (!waiting) {\n        timerFun();\n        waiting = true;\n    }\n}","export function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key;\n    if (key) {\n        delete data.key;\n    }\n    return vnode(vm, tag, key, data, children);\n}\n\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, key, data, children, text) {\n    return { vm, tag, key, data, children, text };\n}\n\nexport function isSameVnode(vnode1, vnode2) {\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\n}","import { isSameVnode } from \".\";\n\nexport function createElm(vnode) {\n    let { tag, data, children, text } = vnode;\n    if (typeof tag === 'string') {\n        // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n        vnode.el = document.createElement(tag);\n        patchProps(vnode.el, {}, data);\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\nexport function patchProps(el, oldProps = {}, props = {}) {\n\n    // 老的属性中有， 新的没有，要删除老的\n    const oldStyles = oldProps.style || {};\n    const newStyles = props.style || {};\n    for (const key in oldStyles) {\n        if (!newStyles[key]) {\n            el.style[key] = '';\n        }\n    }\n    for (const key in oldProps) {\n        if (!props[key]) {\n            el.removeAttribute(key);\n        }\n    }\n    for (const key in props) {\n        if (key === 'style') {\n            for (const styleName in props.style) {\n                el.style[styleName] = props.style[styleName];\n            }\n        } else {\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n\nexport function patch(oldVNode, vnode) {\n    const isRealElement = oldVNode.nodeType;\n    if (isRealElement) {\n        // 初渲染流程\n        const elm = oldVNode; // 获取真实元素\n        const parentElm = elm.parentNode; // 拿到父元素\n        const newElm = createElm(vnode);\n        parentElm.insertBefore(newElm, elm.nextSibling);\n        parentElm.removeChild(elm);\n        return newElm;\n    }\n    // diff算法\n    // 1. 两个节点不是同一个节点 直接删除老的节点换新的节点（没有比对了）\n    // 2. 两个节点是同一个节点（判断节点的tag和key）比较连个节点的属性是否有差异 （复用老的节点，将差异的属性更新）\n    // 3. 节点比较完成后就需要比较两个节点的儿子\n    return patchVnode(oldVNode, vnode);\n}\n\nfunction patchVnode(oldVNode, vnode) {\n    if (!isSameVnode(oldVNode, vnode)) {\n        const el = createElm(vnode);\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\n        return el;\n    }\n\n    // 文本情况 期望比较内容\n    const el = vnode.el = oldVNode.el; // 复用老节点\n    if (!oldVNode.tag) { // 是文本\n        if (oldVNode.text !== vnode.text) {\n            el.textContent = vnode.text; // 用新文本覆盖旧文本\n        }\n    }\n\n    // 是标签 标签对比标签属性\n    patchProps(el, oldVNode.data, vnode.data);\n\n    // 比较子节点\n    const oldChildren = oldVNode.children || [];\n    const newChildren = vnode.children || [];\n    if (oldChildren.length && newChildren.length) {\n        // 完整的diff算法 需要比较连个子节点\n        updateChildren(el, oldChildren, newChildren);\n    } else if (newChildren.length) {\n        // 没有旧节点 只有新节点\n        mountChildren(el, newChildren);\n    } else if (oldChildren.length) {\n        el.innerHTML = '';\n    }\n\n    return el;\n}\n\nfunction mountChildren(el, newChildren) {\n    newChildren.forEach(child => el.appendChild(createElm(child)));\n}\n\nfunction updateChildren(el, oldChildren, newChildren) {\n    // 用户操作列表 经常会用一些push shift pop等这些方法\n    // vue2中采用双指针的方式比较两个节点\n    let oldStartIndex = 0;\n    let newStartIndex = 0;\n    let oldEndIndex = oldChildren.length - 1;\n    let newEndIndex = newChildren.length - 1;\n\n    let oldStartVnode = oldChildren[0];\n    let newStartVnode = newChildren[0];\n    let oldEndVnode = oldChildren[oldEndIndex];\n    let newEndVnode = newChildren[newEndIndex];\n\n    function makeIndexByKey(children) {\n        let map = {};\n        children.forEach((child, index) => {\n            map[child.key] = index;\n        });\n        return map;\n    }\n\n    let map = makeIndexByKey(oldChildren);\n\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex];\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex];\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) { // 头头比对\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) { // 尾尾比对\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 交叉比对\n            patchVnode(oldEndVnode, newStartVnode);\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 交叉比对\n            patchVnode(oldStartVnode, newEndVnode);\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else {\n            let moveIndex = map[newStartVnode.key];\n            if (moveIndex !== undefined) {\n                let moveVnode = oldChildren[moveIndex];\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\n                oldChildren[moveIndex] = undefined;\n                patchVnode(moveVnode, newStartVnode);\n            } else {\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\n            }\n            newStartVnode = newChildren[++newStartIndex];\n        }\n    }\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            let chiledEl = createElm(newChildren[i]);\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null;\n            el.insertBefore(chiledEl, anchor);\n        }\n    }\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            if (oldChildren[i]) {\n                let chiledEl = oldChildren[i].el;\n                el.removeChild(chiledEl);\n            }\n        }\n    }\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\"\nimport { patch } from \"./vdom/patch\";\n\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        const el = vm.$el;\n        vm.$el = patch(el, vnode);\n    }\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments);\n    }\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments);\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value;\n        return JSON.stringify(value);\n    }\n    Vue.prototype._render = function () {\n        return this.$options.render.call(this);\n    }\n}\n\nexport function mountComponent(vm, el) {\n    vm.$el = el;\n    const updateComponent = () => {\n        vm._update(vm._render())\n    }\n    new Watcher(vm, updateComponent, true);\n}\n\n// vue核心流程\n// 1. 创造响应式数据\n// 2. 将模板转换成AST语法树\n// 3. 将AST语法树转换成render函数\n// 4. 后续每次数据更新可以只执行render函数（无需再次执行AST转化过程）\n// render函数会产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n\n\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook];\n    if (handlers) {\n        handlers.forEach(handler => handler.call(vm));\n    }\n}","// 对数组中的部分方法进行重写\n\nconst oldArrayPrototype = Array.prototype; // 获取数组的原型\n\nexport const newArrayPrototype = Object.create(oldArrayPrototype);\n\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']; // 找到所有的变异方法\n\nmethods.forEach(method => {\n    newArrayPrototype[method] = function (...args) {\n        // 内部调用原来的方法\n        // 函数的劫持 切片编程\n        // 增加自己的功能 ...\n        let inserted\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.splice(2);\n            default:\n                break;\n        }\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n        ob.dep.notify();\n        return oldArrayPrototype[method].call(this, ...args)\n    }\n})","import { newArrayPrototype } from \"./array\";\nimport { Dep } from \"./dep\";\n\nclass Observer {\n    constructor(data) {\n\n        this.dep = new Dep();\n        // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些API $set $delete等）\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false\n        })\n        if (Array.isArray(data)) {\n            // 重写数组的七个变异方法\n            data.__proto__ = newArrayPrototype;\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n\n    walk(data) { // 循环对象 对属性依次劫持\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\n    }\n\n    observeArray(data) {\n        data.forEach(item => observe(item))\n    }\n}\n\nfunction dependArray(value) {\n    value.forEach(i => {\n        i.__ob__?.dep.depend();\n        if (Array.isArray(i)) {\n            dependArray(i);\n        }\n    })\n}\n\nexport function defineReactive(target, key, value) { // 闭包\n    const childOb = observe(value);\n    const dep = new Dep();\n    Object.defineProperty(target, key, {\n        get() {\n            if (Dep.target) {\n                dep.depend();\n                if (childOb) {\n                    childOb.dep.depend();\n                    if (Array.isArray(value)) {\n                        dependArray(value);\n                    }\n                }\n            }\n            return value;\n        },\n        set(newValue) {\n            if (newValue === value) return;\n            observe(newValue);\n            value = newValue;\n            dep.notify();\n        }\n    })\n}\n\nexport function observe(data) {\n    if (typeof data !== 'object' || data === null) {\n        return; // 只对对象进行劫持\n    }\n\n    if (data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\n        return data.__ob__;\n    }\n\n    // 如果一个对象被劫持过了，那就不需要再被劫持了\n    // 要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过\n    return new Observer(data);\n}","import { observe } from \"./observe\";\nimport { Dep } from \"./observe/dep\";\nimport Watcher, { nextTick } from \"./observe/watcher\";\n\nexport function initState(vm) {\n    const opts = vm.$options; // 获取所有的选项\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initWatch(vm) {\n    const watch = vm.$options.watch;\n    for (const key in watch) {\n        const handler = watch[key];\n        if (Array.isArray(handler)) {\n            handler.forEach(i => createWatch(vm, key, i));\n        } else {\n            createWatch(vm, key, handler);\n        }\n    }\n}\n\nfunction createWatch(vm, key, handler) {\n    if (typeof handler === 'string') {\n        handler = vm[handler];\n    }\n    return vm.$watch(key, handler);\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key];\n        },\n        set(newValue) {\n            vm[target][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data; // data 可能是函数或对象\n    data = typeof data === 'function' ? data.call(vm) : data\n    vm._data = data;\n    observe(data);\n\n    // 将vm._data 用vm来代理就可以了\n    for (const key in data) {\n        if (Object.hasOwnProperty.call(data, key)) {\n            proxy(vm, '_data', key);\n        }\n    }\n\n}\n\nfunction initComputed(vm) {\n    const computed = vm.$options.computed;\n    const watchers = vm._computedWatchers = {};\n    for (const key in computed) {\n        const userDef = computed[key];\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\n        watchers[key] = new Watcher(vm, fn, { lazy: true });\n        difineComputed(vm, key, userDef);\n    }\n\n}\n\nfunction difineComputed(target, key, userDef) {\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get;\n    const setter = userDef.set || (() => { });\n    Object.defineProperty(target, key, {\n        get: createComputedGetter(key),\n        set: setter\n    })\n}\n\nfunction createComputedGetter(key) {\n    return function () {\n        const watcher = this._computedWatchers[key];\n        if (watcher.dirty) {\n            watcher.evaluate();\n        }\n        if (Dep.target) {\n            watcher.depend();\n        }\n        return watcher.value;\n    }\n}\n\nexport function initStateMixin(Vue) {\n    Vue.prototype.$nextTick = nextTick;\n    Vue.prototype.$watch = function (exprOrFn, cb) {\n        new Watcher(this, exprOrFn, { user: true }, cb);\n    }\n}","import { compileToFunciton } from \"./compiler\";\nimport { callHook, mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergeOptinons } from \"./utils\";\n\nexport function initMixin(Vue) { // 给Vue增加init方法\n    Vue.prototype._init = function (options) { // 用于初始化操作\n        // vue vm.$options 就是获取用户的配置\n        const vm = this;\n        vm.$options = mergeOptinons(this.constructor.options, options); // 将用户的选项挂载到实例上\n\n        callHook(vm, 'beforeCreate');\n        // 初始化状态 计算属性 watch\n        initState(vm);\n        callHook(vm, 'created');\n\n        if (options.el) {\n            vm.$mount(options.el);\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el);\n\n        const ops = vm.$options;\n\n        if (!ops.render) {\n            let template\n            if (!ops.template && el) {\n                template = el.outerHTML;\n            } else {\n                if (el) {\n                    template = ops.template;\n                }\n            }\n\n            if (template) {\n                const render = compileToFunciton(template);\n                ops.render = render;\n            }\n        }\n\n        mountComponent(vm, el); // 组件的挂载\n\n    }\n}\n\n\n","import { compileToFunciton } from \"./compiler\";\nimport { initGlobalAPI } from \"./globalAPI\";\nimport { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { initStateMixin } from \"./state\";\nimport { createElm, patch } from \"./vdom/patch\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) { // options就是用户的选项\n    this._init(options);\n}\n\n\ninitMixin(Vue); // 拓展了init方法\ninitLifeCycle(Vue);\ninitGlobalAPI(Vue);\ninitStateMixin(Vue);\n\nconst render1 = compileToFunciton(`<ul>\n<li key=\"a\">a</li>\n<li key=\"b\">b</li>\n<li key=\"c\">c</li>\n<li key=\"d\">d</li>\n</ul>`)\nconst vm1 = new Vue({ data: { name: 'zf' } })\nconst prevVnode = render1.call(vm1);\nconst el = createElm(prevVnode);\ndocument.body.appendChild(el);\nconst render2 = compileToFunciton(`<ul>\n<li key=\"b\">b</li>\n<li key=\"m\">m</li>\n<li key=\"a\">a</li>\n<li key=\"p\">p</li>\n<li key=\"c\">c</li>\n<li key=\"q\">q</li>\n</ul>`)\nconst vm2 = new Vue({ data: { name: 'zf' } })\nconst nextVnode = render2.call(vm2);\n\nsetTimeout(() => {\n    patch(prevVnode, nextVnode);\n}, 1000)\n\nexport default Vue;"],"names":["ncname","qnameCature","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunciton","template","Function","strats","LIFECYCLE","hook","p","c","concat","mergeOptinons","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","addSub","call","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallBacks","cbs","timerFun","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","chiledEl","anchor","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","render","mountComponent","updateComponent","callHook","handlers","handler","oldArrayPrototype","Array","newArrayPrototype","Object","create","methods","method","inserted","ob","__ob__","args","splice","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","createWatch","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","difineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","prevVnode","body","render2","vm2","nextVnode"],"mappings":"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"}